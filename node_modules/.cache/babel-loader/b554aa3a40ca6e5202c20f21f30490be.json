{"ast":null,"code":"import * as React from 'react';\nimport { user } from 'rxfire/auth';\nimport { preloadAuth, preloadObservable, useAuth, useObservable } from '..';\nimport { from } from 'rxjs';\nexport function preloadUser(firebaseApp) {\n  return preloadAuth(firebaseApp).then(function (auth) {\n    var result = preloadObservable(user(auth()), 'auth: user');\n    return result.request.promise;\n  });\n}\nexport function useUser(auth, options) {\n  auth = auth || useAuth()();\n  var currentUser = undefined;\n\n  if (options && options.startWithValue !== undefined) {\n    currentUser = options.startWithValue;\n  } else if (auth.currentUser) {\n    currentUser = auth.currentUser;\n  }\n\n  return useObservable(user(auth), 'auth: user', currentUser);\n}\nexport function useIdTokenResult(user, forceRefresh) {\n  if (forceRefresh === void 0) {\n    forceRefresh = false;\n  }\n\n  if (!user) {\n    throw new Error('you must provide a user');\n  }\n\n  var idToken$ = from(user.getIdTokenResult(forceRefresh));\n  return useObservable(idToken$, user.uid + \"-claims\");\n}\nexport function ClaimsCheck(_a) {\n  var user = _a.user,\n      fallback = _a.fallback,\n      children = _a.children,\n      requiredClaims = _a.requiredClaims;\n  var claims = useIdTokenResult(user, false).claims;\n  var missingClaims = {};\n  Object.keys(requiredClaims).forEach(function (claim) {\n    if (requiredClaims[claim] !== claims[claim]) {\n      missingClaims[claim] = {\n        expected: requiredClaims[claim],\n        actual: claims[claim]\n      };\n    }\n  });\n\n  if (Object.keys(missingClaims).length === 0) {\n    return React.createElement(React.Fragment, null, children);\n  } else {\n    return React.createElement(React.Fragment, null, fallback);\n  }\n}\nexport function AuthCheck(_a) {\n  var auth = _a.auth,\n      fallback = _a.fallback,\n      children = _a.children,\n      requiredClaims = _a.requiredClaims;\n  var user = useUser(auth);\n\n  if (user) {\n    return requiredClaims ? React.createElement(ClaimsCheck, {\n      user: user,\n      fallback: fallback,\n      requiredClaims: requiredClaims\n    }, children) : React.createElement(React.Fragment, null, children);\n  } else {\n    return React.createElement(React.Fragment, null, fallback);\n  }\n}","map":{"version":3,"sources":["C:/Users/Juan Pablo/Desktop/firebase-react-byte/node_modules/reactfire/auth/index.js"],"names":["React","user","preloadAuth","preloadObservable","useAuth","useObservable","from","preloadUser","firebaseApp","then","auth","result","request","promise","useUser","options","currentUser","undefined","startWithValue","useIdTokenResult","forceRefresh","Error","idToken$","getIdTokenResult","uid","ClaimsCheck","_a","fallback","children","requiredClaims","claims","missingClaims","Object","keys","forEach","claim","expected","actual","length","createElement","Fragment","AuthCheck"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { user } from 'rxfire/auth';\nimport { preloadAuth, preloadObservable, useAuth, useObservable } from '..';\nimport { from } from 'rxjs';\nexport function preloadUser(firebaseApp) {\n    return preloadAuth(firebaseApp).then(function (auth) {\n        var result = preloadObservable(user(auth()), 'auth: user');\n        return result.request.promise;\n    });\n}\nexport function useUser(auth, options) {\n    auth = auth || useAuth()();\n    var currentUser = undefined;\n    if (options && options.startWithValue !== undefined) {\n        currentUser = options.startWithValue;\n    }\n    else if (auth.currentUser) {\n        currentUser = auth.currentUser;\n    }\n    return useObservable(user(auth), 'auth: user', currentUser);\n}\nexport function useIdTokenResult(user, forceRefresh) {\n    if (forceRefresh === void 0) { forceRefresh = false; }\n    if (!user) {\n        throw new Error('you must provide a user');\n    }\n    var idToken$ = from(user.getIdTokenResult(forceRefresh));\n    return useObservable(idToken$, user.uid + \"-claims\");\n}\nexport function ClaimsCheck(_a) {\n    var user = _a.user, fallback = _a.fallback, children = _a.children, requiredClaims = _a.requiredClaims;\n    var claims = useIdTokenResult(user, false).claims;\n    var missingClaims = {};\n    Object.keys(requiredClaims).forEach(function (claim) {\n        if (requiredClaims[claim] !== claims[claim]) {\n            missingClaims[claim] = {\n                expected: requiredClaims[claim],\n                actual: claims[claim]\n            };\n        }\n    });\n    if (Object.keys(missingClaims).length === 0) {\n        return React.createElement(React.Fragment, null, children);\n    }\n    else {\n        return React.createElement(React.Fragment, null, fallback);\n    }\n}\nexport function AuthCheck(_a) {\n    var auth = _a.auth, fallback = _a.fallback, children = _a.children, requiredClaims = _a.requiredClaims;\n    var user = useUser(auth);\n    if (user) {\n        return requiredClaims ? (React.createElement(ClaimsCheck, { user: user, fallback: fallback, requiredClaims: requiredClaims }, children)) : (React.createElement(React.Fragment, null, children));\n    }\n    else {\n        return React.createElement(React.Fragment, null, fallback);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}