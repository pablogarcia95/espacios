{"ast":null,"code":"var ActiveRequest = function () {\n  function ActiveRequest(promise) {\n    var _this = this;\n\n    this.setValue = function (value) {\n      _this.value = value;\n      _this.isComplete = true;\n    };\n\n    this.setError = function (err) {\n      _this.error = err;\n      _this.isComplete = true;\n    };\n\n    this.isComplete = false;\n    this.promise = promise.then(function (result) {\n      _this.setValue(result);\n\n      return result;\n    }).catch(function (err) {\n      _this.isComplete = true;\n\n      _this.setError(err);\n    });\n  }\n\n  return ActiveRequest;\n}();\n\nexport { ActiveRequest };\n\nvar ObservablePromiseCache = function () {\n  function ObservablePromiseCache() {\n    this.activeRequests = new Map();\n  }\n\n  ObservablePromiseCache.prototype.getRequest = function (requestId) {\n    var request = this.activeRequests.get(requestId);\n\n    if (request === undefined) {\n      throw new Error(\"No\\u00A0request\\u00A0with\\u00A0ID\\u00A0\\\"\" + requestId + \"\\\"\\u00A0exists\");\n    }\n\n    return request;\n  };\n\n  ObservablePromiseCache.prototype.createRequest = function (promise, requestId) {\n    if (this.activeRequests.get(requestId) !== undefined) {\n      throw new Error(\"request\\u00A0\\\"\" + requestId + \"\\\"\\u00A0is\\u00A0already\\u00A0in\\u00A0use.\");\n    }\n\n    var request = new ActiveRequest(promise);\n    this.activeRequests.set(requestId, request);\n    return request;\n  };\n\n  ObservablePromiseCache.prototype.createDedupedRequest = function (getPromise, requestId) {\n    var request = this.activeRequests.get(requestId);\n\n    if (request === undefined) {\n      request = this.createRequest(getPromise(), requestId);\n    }\n\n    return request;\n  };\n\n  ObservablePromiseCache.prototype.removeRequest = function (requestId) {\n    this.activeRequests.delete(requestId);\n  };\n\n  return ObservablePromiseCache;\n}();\n\nexport { ObservablePromiseCache };","map":{"version":3,"sources":["C:/Users/Juan Pablo/Desktop/firebase-react-byte/node_modules/reactfire/useObservable/requestCache.js"],"names":["ActiveRequest","promise","_this","setValue","value","isComplete","setError","err","error","then","result","catch","ObservablePromiseCache","activeRequests","Map","prototype","getRequest","requestId","request","get","undefined","Error","createRequest","set","createDedupedRequest","getPromise","removeRequest","delete"],"mappings":"AAAA,IAAIA,aAAa,GAAI,YAAY;AAC7B,WAASA,aAAT,CAAuBC,OAAvB,EAAgC;AAC5B,QAAIC,KAAK,GAAG,IAAZ;;AACA,SAAKC,QAAL,GAAgB,UAAUC,KAAV,EAAiB;AAC7BF,MAAAA,KAAK,CAACE,KAAN,GAAcA,KAAd;AACAF,MAAAA,KAAK,CAACG,UAAN,GAAmB,IAAnB;AACH,KAHD;;AAIA,SAAKC,QAAL,GAAgB,UAAUC,GAAV,EAAe;AAC3BL,MAAAA,KAAK,CAACM,KAAN,GAAcD,GAAd;AACAL,MAAAA,KAAK,CAACG,UAAN,GAAmB,IAAnB;AACH,KAHD;;AAIA,SAAKA,UAAL,GAAkB,KAAlB;AACA,SAAKJ,OAAL,GAAeA,OAAO,CACjBQ,IADU,CACL,UAAUC,MAAV,EAAkB;AACxBR,MAAAA,KAAK,CAACC,QAAN,CAAeO,MAAf;;AACA,aAAOA,MAAP;AACH,KAJc,EAKVC,KALU,CAKJ,UAAUJ,GAAV,EAAe;AACtBL,MAAAA,KAAK,CAACG,UAAN,GAAmB,IAAnB;;AACAH,MAAAA,KAAK,CAACI,QAAN,CAAeC,GAAf;AACH,KARc,CAAf;AASH;;AACD,SAAOP,aAAP;AACH,CAvBoB,EAArB;;AAwBA,SAASA,aAAT;;AACA,IAAIY,sBAAsB,GAAI,YAAY;AACtC,WAASA,sBAAT,GAAkC;AAC9B,SAAKC,cAAL,GAAsB,IAAIC,GAAJ,EAAtB;AACH;;AACDF,EAAAA,sBAAsB,CAACG,SAAvB,CAAiCC,UAAjC,GAA8C,UAAUC,SAAV,EAAqB;AAC/D,QAAIC,OAAO,GAAG,KAAKL,cAAL,CAAoBM,GAApB,CAAwBF,SAAxB,CAAd;;AACA,QAAIC,OAAO,KAAKE,SAAhB,EAA2B;AACvB,YAAM,IAAIC,KAAJ,CAAU,8CAA8CJ,SAA9C,GAA0D,gBAApE,CAAN;AACH;;AACD,WAAOC,OAAP;AACH,GAND;;AAOAN,EAAAA,sBAAsB,CAACG,SAAvB,CAAiCO,aAAjC,GAAiD,UAAUrB,OAAV,EAAmBgB,SAAnB,EAA8B;AAC3E,QAAI,KAAKJ,cAAL,CAAoBM,GAApB,CAAwBF,SAAxB,MAAuCG,SAA3C,EAAsD;AAClD,YAAM,IAAIC,KAAJ,CAAU,oBAAoBJ,SAApB,GAAgC,2CAA1C,CAAN;AACH;;AACD,QAAIC,OAAO,GAAG,IAAIlB,aAAJ,CAAkBC,OAAlB,CAAd;AACA,SAAKY,cAAL,CAAoBU,GAApB,CAAwBN,SAAxB,EAAmCC,OAAnC;AACA,WAAOA,OAAP;AACH,GAPD;;AAQAN,EAAAA,sBAAsB,CAACG,SAAvB,CAAiCS,oBAAjC,GAAwD,UAAUC,UAAV,EAAsBR,SAAtB,EAAiC;AACrF,QAAIC,OAAO,GAAG,KAAKL,cAAL,CAAoBM,GAApB,CAAwBF,SAAxB,CAAd;;AACA,QAAIC,OAAO,KAAKE,SAAhB,EAA2B;AACvBF,MAAAA,OAAO,GAAG,KAAKI,aAAL,CAAmBG,UAAU,EAA7B,EAAiCR,SAAjC,CAAV;AACH;;AACD,WAAOC,OAAP;AACH,GAND;;AAOAN,EAAAA,sBAAsB,CAACG,SAAvB,CAAiCW,aAAjC,GAAiD,UAAUT,SAAV,EAAqB;AAClE,SAAKJ,cAAL,CAAoBc,MAApB,CAA2BV,SAA3B;AACH,GAFD;;AAGA,SAAOL,sBAAP;AACH,CA9B6B,EAA9B;;AA+BA,SAASA,sBAAT","sourcesContent":["var ActiveRequest = (function () {\n    function ActiveRequest(promise) {\n        var _this = this;\n        this.setValue = function (value) {\n            _this.value = value;\n            _this.isComplete = true;\n        };\n        this.setError = function (err) {\n            _this.error = err;\n            _this.isComplete = true;\n        };\n        this.isComplete = false;\n        this.promise = promise\n            .then(function (result) {\n            _this.setValue(result);\n            return result;\n        })\n            .catch(function (err) {\n            _this.isComplete = true;\n            _this.setError(err);\n        });\n    }\n    return ActiveRequest;\n}());\nexport { ActiveRequest };\nvar ObservablePromiseCache = (function () {\n    function ObservablePromiseCache() {\n        this.activeRequests = new Map();\n    }\n    ObservablePromiseCache.prototype.getRequest = function (requestId) {\n        var request = this.activeRequests.get(requestId);\n        if (request === undefined) {\n            throw new Error(\"No\\u00A0request\\u00A0with\\u00A0ID\\u00A0\\\"\" + requestId + \"\\\"\\u00A0exists\");\n        }\n        return request;\n    };\n    ObservablePromiseCache.prototype.createRequest = function (promise, requestId) {\n        if (this.activeRequests.get(requestId) !== undefined) {\n            throw new Error(\"request\\u00A0\\\"\" + requestId + \"\\\"\\u00A0is\\u00A0already\\u00A0in\\u00A0use.\");\n        }\n        var request = new ActiveRequest(promise);\n        this.activeRequests.set(requestId, request);\n        return request;\n    };\n    ObservablePromiseCache.prototype.createDedupedRequest = function (getPromise, requestId) {\n        var request = this.activeRequests.get(requestId);\n        if (request === undefined) {\n            request = this.createRequest(getPromise(), requestId);\n        }\n        return request;\n    };\n    ObservablePromiseCache.prototype.removeRequest = function (requestId) {\n        this.activeRequests.delete(requestId);\n    };\n    return ObservablePromiseCache;\n}());\nexport { ObservablePromiseCache };\n"]},"metadata":{},"sourceType":"module"}