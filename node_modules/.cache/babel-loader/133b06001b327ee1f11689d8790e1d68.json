{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Juan Pablo\\\\Desktop\\\\firebase-react-byte\\\\src\\\\Table\\\\Table.js\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport TableContext from './TableContext';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table',\n    width: '100%',\n    borderCollapse: 'collapse',\n    borderSpacing: 0,\n    '& caption': { ...theme.typography.body2,\n      padding: theme.spacing(2),\n      color: theme.palette.text.secondary,\n      textAlign: 'left',\n      captionSide: 'bottom'\n    }\n  },\n\n  /* Styles applied to the root element if `stickyHeader={true}`. */\n  stickyHeader: {\n    borderCollapse: 'separate'\n  }\n});\nconst Table = React.forwardRef(function Table(props, ref) {\n  const {\n    classes,\n    className,\n    component: Component = 'table',\n    padding = 'default',\n    size = 'medium',\n    stickyHeader = false,\n    ...other\n  } = props;\n  const table = React.useMemo(() => ({\n    padding,\n    size,\n    stickyHeader\n  }), [padding, size, stickyHeader]);\n  return /*#__PURE__*/React.createElement(TableContext.Provider, {\n    value: table,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Component, Object.assign({\n    ref: ref,\n    className: clsx(classes.root, {\n      [classes.stickyHeader]: stickyHeader\n    }, className)\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  })));\n});\nTable.propTypes = {\n  /**\n   * The content of the table, normally `TableHead` and `TableBody`.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Allows TableCells to inherit padding of the Table.\n   */\n  padding: PropTypes.oneOf(['default', 'checkbox', 'none']),\n\n  /**\n   * Allows TableCells to inherit size of the Table.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * Set the header sticky.\n   *\n   * ⚠️ It doesn't work with IE 11.\n   */\n  stickyHeader: PropTypes.bool\n};\nexport default withStyles(styles, {\n  name: 'MuiTable'\n})(Table);","map":{"version":3,"sources":["C:/Users/Juan Pablo/Desktop/firebase-react-byte/src/Table/Table.js"],"names":["React","PropTypes","clsx","withStyles","TableContext","styles","theme","root","display","width","borderCollapse","borderSpacing","typography","body2","padding","spacing","color","palette","text","secondary","textAlign","captionSide","stickyHeader","Table","forwardRef","props","ref","classes","className","component","Component","size","other","table","useMemo","propTypes","children","node","isRequired","object","string","elementType","oneOf","bool","name"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport TableContext from './TableContext';\n\nexport const styles = (theme) => ({\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table',\n    width: '100%',\n    borderCollapse: 'collapse',\n    borderSpacing: 0,\n    '& caption': {\n      ...theme.typography.body2,\n      padding: theme.spacing(2),\n      color: theme.palette.text.secondary,\n      textAlign: 'left',\n      captionSide: 'bottom',\n    },\n  },\n  /* Styles applied to the root element if `stickyHeader={true}`. */\n  stickyHeader: {\n    borderCollapse: 'separate',\n  },\n});\n\nconst Table = React.forwardRef(function Table(props, ref) {\n  const {\n    classes,\n    className,\n    component: Component = 'table',\n    padding = 'default',\n    size = 'medium',\n    stickyHeader = false,\n    ...other\n  } = props;\n  const table = React.useMemo(() => ({ padding, size, stickyHeader }), [\n    padding,\n    size,\n    stickyHeader,\n  ]);\n\n  return (\n    <TableContext.Provider value={table}>\n      <Component\n        ref={ref}\n        className={clsx(classes.root, { [classes.stickyHeader]: stickyHeader }, className)}\n        {...other}\n      />\n    </TableContext.Provider>\n  );\n});\n\nTable.propTypes = {\n  /**\n   * The content of the table, normally `TableHead` and `TableBody`.\n   */\n  children: PropTypes.node.isRequired,\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Allows TableCells to inherit padding of the Table.\n   */\n  padding: PropTypes.oneOf(['default', 'checkbox', 'none']),\n  /**\n   * Allows TableCells to inherit size of the Table.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n  /**\n   * Set the header sticky.\n   *\n   * ⚠️ It doesn't work with IE 11.\n   */\n  stickyHeader: PropTypes.bool,\n};\n\nexport default withStyles(styles, { name: 'MuiTable' })(Table);\n"]},"metadata":{},"sourceType":"module"}